(function(f,c){typeof exports=="object"&&typeof module<"u"?c(exports):typeof define=="function"&&define.amd?define(["exports"],c):(f=typeof globalThis<"u"?globalThis:f||self,c(f.morphia={}))})(this,function(f){"use strict";var p=Object.defineProperty;var w=(f,c,b)=>c in f?p(f,c,{enumerable:!0,configurable:!0,writable:!0,value:b}):f[c]=b;var h=(f,c,b)=>w(f,typeof c!="symbol"?c+"":c,b);var c=(t=>(t[t.Array=0]="Array",t[t.Object=1]="Object",t[t.Number=2]="Number",t[t.String=3]="String",t[t.Bigint=4]="Bigint",t[t.Boolean=5]="Boolean",t[t.Symbol=6]="Symbol",t[t.Undefined=7]="Undefined",t[t.Function=8]="Function",t))(c||{});class b{constructor(){h(this,"globalKeys",new Map);h(this,"separator","|");h(this,"arrayMarker","@");h(this,"objectMarker","&");h(this,"typeMarker","#");h(this,"keyCounter",0)}getOrCreateKey(n,d){let i;switch(d){case"string":i=3;break;case"number":i=2;break;case"bigint":i=4;break;case"boolean":i=5;break;case"symbol":i=6;break;case"undefined":i=7;break;case"object":i=1;break;case"function":i=8;break;case"array":i=0;break;default:throw new Error("Invalid type")}const e=`${n}${this.typeMarker}${i}`;return this.globalKeys.has(e)||this.globalKeys.set(e,this.keyCounter++),this.globalKeys.get(e)}encodeKey(n){return encodeURIComponent(n)}decodeKey(n){return decodeURIComponent(n)}toArray(n){const d=[],i=[[n,"",new Set]];for(;i.length>0;){const[e,r,g]=i.pop();if(g.has(e))throw new Error("Circular reference detected");if(Array.isArray(e)){const u=this.getOrCreateKey(r,"array");d[u]=this.arrayMarker+e.length;for(let l=0;l<e.length;l++){const s=e[l],o=`${r}${r?this.separator:""}${this.encodeKey(l.toString())}`;if(this.isPrimitive(s)){const y=typeof s,a=this.getOrCreateKey(o,y);d[a]=s}else if(typeof s=="object"&&s!==null){const y=new Set(g);y.add(e),i.push([s,o,y])}}}else if(typeof e=="object"&&e!==null){const u=this.getOrCreateKey(r,"object");d[u]=this.objectMarker+Object.keys(e).length;for(const[l,s]of Object.entries(e)){const o=this.encodeKey(l),y=r?`${r}${this.separator}${o}`:o;if(this.isPrimitive(s)){const a=typeof s,k=this.getOrCreateKey(y,a);d[k]=s}else if(typeof s=="object"&&s!==null){const a=new Set(g);a.add(e),i.push([s,y,a])}}}else if(this.isPrimitive(e)){const u=typeof e,l=this.getOrCreateKey(r,u);d[l]=e}}return d}fromArray(n){if(n.length==0)throw new Error("Empty array input");if(this.globalKeys.size==0)throw new Error("No keys found");const d={};for(const[i,e]of this.globalKeys.entries()){if(e>=n.length)continue;const r=n[e],[g,u]=i.split(this.typeMarker),l=parseFloat(u);if(g.length==0&&l==1&&e==0)continue;const s=g.split(this.separator).map(this.decodeKey.bind(this));let o=d;for(let y=0;y<s.length;y++){const a=s[y],k=y===s.length-1;if(o)if(k)if(l===0&&typeof r=="string"&&r.startsWith(this.arrayMarker)){const m=parseInt(r.slice(1),10);o[a]=new Array(m)}else if(l===1&&typeof r=="string"&&r.startsWith(this.objectMarker))o[a]={};else if(l==7){if(r!==null)throw new Error(`Invalid value for undefined: ${r}, received type ${typeof r}`);o[a]=void 0}else{if(r===void 0||r===null&&l!==1)continue;o[a]=r}else o[a]===void 0&&(isNaN(Number(s[y+1]))?o[a]={}:o[a]=[]),o=o[a]}}return d}get keys(){return Object.fromEntries(this.globalKeys)}set keys(n){this.globalKeys=new Map(Object.entries(n)),this.keyCounter=Math.max(...Object.values(n))+1}isPrimitive(n){return typeof n=="string"||typeof n=="number"||typeof n=="boolean"||n===null||n===void 0}}f.Morphia=b,f.MorphiaType=c,Object.defineProperty(f,Symbol.toStringTag,{value:"Module"})});
