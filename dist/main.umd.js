(function(l,c){typeof exports=="object"&&typeof module<"u"?c(exports):typeof define=="function"&&define.amd?define(["exports"],c):(l=typeof globalThis<"u"?globalThis:l||self,c(l.morphia={}))})(this,function(l){"use strict";var p=Object.defineProperty;var w=(l,c,b)=>c in l?p(l,c,{enumerable:!0,configurable:!0,writable:!0,value:b}):l[c]=b;var u=(l,c,b)=>w(l,typeof c!="symbol"?c+"":c,b);var c=(t=>(t[t.Array=0]="Array",t[t.Object=1]="Object",t[t.Number=2]="Number",t[t.String=3]="String",t[t.Bigint=4]="Bigint",t[t.Boolean=5]="Boolean",t[t.Symbol=6]="Symbol",t[t.Undefined=7]="Undefined",t[t.Function=8]="Function",t))(c||{});class b{constructor(){u(this,"globalKeys",new Map);u(this,"separator","|");u(this,"arrayMarker","@");u(this,"objectMarker","&");u(this,"typeMarker","#");u(this,"keyCounter",0)}getOrCreateKey(r,d){let s;switch(d){case"string":s=3;break;case"number":s=2;break;case"bigint":s=4;break;case"boolean":s=5;break;case"symbol":s=6;break;case"undefined":s=7;break;case"object":s=1;break;case"function":s=8;break;case"array":s=0;break;default:throw new Error("Invalid type")}const e=`${r}${this.typeMarker}${s}`;return this.globalKeys.has(e)||this.globalKeys.set(e,this.keyCounter++),this.globalKeys.get(e)}encodeKey(r){return encodeURIComponent(r)}decodeKey(r){return decodeURIComponent(r)}toArray(r){const d=[],s=[[r,"",new Set]];for(;s.length>0;){const[e,o,g]=s.pop();if(g.has(e))throw new Error("Circular reference detected");if(Array.isArray(e)){const h=this.getOrCreateKey(o,"array");d[h]=this.arrayMarker+e.length;for(let y=0;y<e.length;y++){const n=e[y],i=`${o}${o?this.separator:""}${this.encodeKey(y.toString())}`;if(this.isPrimitive(n)){const f=typeof n,a=this.getOrCreateKey(i,f);d[a]=n}else if(typeof n=="object"&&n!==null){const f=new Set(g);f.add(e),s.push([n,i,f])}}}else if(typeof e=="object"&&e!==null){const h=this.getOrCreateKey(o,"object");d[h]=this.objectMarker+Object.keys(e).length;for(const[y,n]of Object.entries(e)){const i=this.encodeKey(y),f=o?`${o}${this.separator}${i}`:i;if(this.isPrimitive(n)){const a=typeof n,k=this.getOrCreateKey(f,a);d[k]=n}else if(typeof n=="object"&&n!==null){const a=new Set(g);a.add(e),s.push([n,f,a])}}}else if(this.isPrimitive(e)){const h=typeof e,y=this.getOrCreateKey(o,h);d[y]=e}}return d}fromArray(r){if(r.length==0)throw new Error("Empty array input");if(this.globalKeys.size==0)throw new Error("No keys found");const d={};for(const[s,e]of this.globalKeys.entries()){if(e>=r.length)continue;const o=r[e],[g,h]=s.split(this.typeMarker),y=parseFloat(h);if(g.length==0&&y==1&&e==0)continue;const n=g.split(this.separator).map(this.decodeKey.bind(this));let i=d;for(let f=0;f<n.length;f++){const a=n[f],k=f===n.length-1;if(i)if(k)if(y===0&&typeof o=="string"&&o.startsWith(this.arrayMarker)){const m=parseInt(o.slice(1),10);i[a]=new Array(m)}else if(y===1&&typeof o=="string"&&o.startsWith(this.objectMarker))i[a]={};else if(y==7){if(o!==null)throw new Error(`Invalid value for undefined: ${o}, received type ${typeof o}`);i[a]=void 0}else i[a]=o;else i[a]===void 0&&(isNaN(Number(n[f+1]))?i[a]={}:i[a]=[]),i=i[a]}}return d}get keys(){return Object.fromEntries(this.globalKeys)}set keys(r){this.globalKeys=new Map(Object.entries(r)),this.keyCounter=Math.max(...Object.values(r))+1}isPrimitive(r){return typeof r=="string"||typeof r=="number"||typeof r=="boolean"||r===null||r===void 0}}l.Morphia=b,l.MorphiaType=c,Object.defineProperty(l,Symbol.toStringTag,{value:"Module"})});
